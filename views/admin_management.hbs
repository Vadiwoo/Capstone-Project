<div>
  <ul>
    <li><a href="/sign-out">Sign Out</a></li>
    <li><a href="#">Analytics</a></li>
    <li><a href="/admin_management">Admin Management</a></li>
    <li><a href="/dashboard">Dashboard</a></li>
  </ul>
</div>
<br />
<div class="jumbotron">
  <div class="container">
    <h2>Administrator Management</h2>
  </div>
</div>
<div class="col-md-3 container">
  <div class="row">
    <h2 align="center">Find User</h2>
    <p>Search for a user profile by entering their email below</p>
  </br>
</div>
<div class="row">
  <div class="col-lg-12">
    <div class="input-group">
      <input type="text" class="form-control" id="userSearch" placeholder="Search for user...">
      <span class="input-group-btn">
        <button class="btn btn-default" type="button" onclick="userSearch()">Search</button>
      </span>
    </div>
  </div>
</div>
</br>
</br>
<div class="row">
  <div class="col-md-12">
    <h2>Add Signiture</h2>
    <p>Attach a signature to a user by entering a user's email into the box below. </br>Note: you are able to upload signatures to both admins and users, but only users will be able to create a certificate with the signature.</p>
  </br>
  <div class="alert alert-success" id="signature-success" hidden=true>
    <strong>Success!</strong>
  </div>
  <div class="alert alert-danger" id="signature-failure" hidden=true>
    <strong>Error Uploading Signature!</strong>
  </div>
    <form method="post" name="signature" enctype="multipart/form-data">
      <label for="email" class="col-form-label">Account Email</label>
      <input type="email" class="form-control" id="sig_email" name="email" placeholder="Email" required>
     <div>
       <label for="file">Choose file to upload</label>
       <input type="file" id="file" name="file" accept=".jpg, .jpeg, .png">
     </div>
     <div>
     </br>
       <button type="submit" class="btn btn-primary" id="submitSignature">Submit</button>
     </div>
    </form>
  </div>
</div>
</div>

<div class="col-md-9 well">
  <form action="/user" method="post" id="mainForm">
    <div class="form-row">
      <div class="form-group col-md-6">
        <label for="firstName" class="col-form-label">First Name</label>
        <input type="text" class="form-control" id="firstName" placeholder="First Name" disabled=true>
      </div>
      <div class="form-group col-md-6">
        <label for="lastName" class="col-form-label">Last Name</label>
        <input type="text" class="form-control" id="lastName" placeholder="Last Name" disabled=true>
      </div>
    </div>
    <div class="form-row">
      <div class="form-group col-md-6">
        <label for="email" class="col-form-label">Email</label>
        <input type="email" class="form-control" id="email" placeholder="Email" disabled=true>
      </div>
      <div class="form-group col-md-6">
        <label for="password" class="col-form-label">Password</label>
        <input type="password" class="form-control" id="password" placeholder="Password" disabled=true>
      </div>

    </div>
    <div class="form-row">
      <div class="form-group col-md-3">
        <label>Administrator?</label>
        <div class="form-check">
          <input class="form-check-input" name="isAdmin" type="radio" value="admin" id="isAdminYes" disabled=true>
          <label class="form-check-label" for="defaultCheck1">Yes</label>
        </div>
        <div class="form-check">
          <input class="form-check-input" name="isAdmin" type="radio" value="user" id="isAdminNo" disabled=true>
          <label class="form-check-label" for="defaultCheck1">No</label>
        </div>
      </div>
      <div class="form-group col-md-3">
        <label for="inputState">Department</label>
        <select id="inputState" class="form-control" disabled=true>
          <option selected>Select Department...</option>
          {{#each department_name}}
          <option value={{this}}>{{this}}</option>
          {{/each}}
        </select>
      </div>
    </div>
    <div class="form-row">
      <div class="form-group col-md-12">
        <button class="btn btn-default" type="button" onclick="createNewUser()" id=submitButton disabled=true>Save</button>
        <button class="btn btn-default" type="button" id="editButton" onclick="editToggledOn()" disabled=true>Edit</button>
        <button class="btn btn-default"  type="button" id="cancelEditButton" onclick="cancelEdit()" disabled=true>Cancel</button>
        <button class="btn btn-danger pull-right" type="button" id="deleteButton" onclick="deleteUserProfile()" disabled=true>Delete Profile</button>
        <input type="hidden" name="isNew" id="isNew" value="">
      </div>
    </div>
  </form>
  <div class="row">
    <div class-"col-lg-12">
      <button class="btn btn-primary btn-large btn-block" type="button" id="createUser" onclick="createUserButton()">Create User</button>
    </div>
  </div>
  <div class="col-sm-12">
    <div class="alert alert-success" id="success-alert" hidden=true>
      <strong>Success!</strong>
    </div>
    <div class="alert alert-danger" id="failure-alert" hidden=true>
      <strong>Error Submitting User Info!</strong>
    </div>
  </div >
</div>
</div>

<script>

//https://developer.mozilla.org/en-US/docs/Web/API/FormData/Using_FormData_Objects
var form = document.forms.namedItem("signature");
form.addEventListener('submit', function(ev) {

  var oData = new FormData(form);

  var oReq = new XMLHttpRequest();
  oReq.open("POST", "/user/upload/signature", true);
  oReq.onload = function(oEvent) {
    if (oReq.status == 200) {
      alertSignatureSuccess();
      console.log("Uploaded!");
    } else {
      alertSignatureFailure();
      console.log("Error " + oReq.status + " occurred when trying to upload your file.");
    }
  };

  oReq.send(oData);
  ev.preventDefault();
}, false);

function userSearch(){
  var userEmail = document.getElementById("userSearch");
  if(userEmail.value != ""){
    var xhttp = new XMLHttpRequest();
    xhttp.onreadystatechange = function() {
      if (this.readyState == 4 && this.status == 200) {
        console.log(JSON.parse(xhttp.responseText));
        json = JSON.parse(xhttp.responseText)[0];
        populateFormDisabled(json);

        enableEditButton();
        enableDeleteButton();
        disableSubmitButton();
      }
    };
    xhttp.open("GET", "/user/"+userEmail.value, true);
    xhttp.send();
  }
}

function createNewUser() {
  console.log(document.getElementById("isNew").value);
  if(document.getElementById("isNew").value = "false"){
    submitForm(false);
  } else {
    submitForm(true);
  }
}

//isNew determines if this is a NEW user, or if we are editing an old one.
function submitForm(isNew) {
  disableSubmitButton();

// code modified from http://www.jquerybyexample.net/2012/06/check-if-radio-button-is-checked-or.html
  var type = $('input[name=isAdmin]:checked', '#mainForm').val();

  formData = {
    "firstName" : (document.getElementById("firstName")).value,
    "lastName" : (document.getElementById("lastName")).value,
    "email" : (document.getElementById("email")).value,
    "password" : document.getElementById("password").value,
    "department_name" : document.getElementById("inputState").value,
    "isNew" : isNew,
    "type" : type
  };

  var xhttp = new XMLHttpRequest();
  xhttp.onreadystatechange = function() {
    if(this.readyState == 4 && this.status == 200) {
      console.log("Successfully added/updated user!")
      disableFormInputs();
      enableEditButton();
      alertSuccess();
    } else if(this.readyState == 4 && this.status != 200){
      alertFailure();
    }
    document.getElementById("isNew").value = "";
  };
  xhttp.open("POST", "/user");
  xhttp.setRequestHeader("Content-type", "application/json");
  xhttp.send(JSON.stringify(formData));
}

function createUserButton(){
  disableCreateNewUser();
  enableSubmitButton();
  disableDeleteButton();
  disableEditButton();
  enableCancelEditButton();
  enableFormInputs();
  document.getElementById("email").disabled = false;
  document.getElementById("isNew").value = "true";
  clearAllInputs();
}

function deleteUserProfile() {
  disableDeleteButton();

  var xhttp = new XMLHttpRequest();
  xhttp.onreadystatechange = function() {
    if(this.readyState == 4 && this.status == 200) {
      console.log("Successfully deleted user!")
      clearAllInputs();
      enableFormInputs();
      enableCreateNewUser();
      disableEditButton();
      alertSuccess();
    }
  };

  data = {
    "email" : (document.getElementById("email")).value
  };

  xhttp.open("DELETE", "/user");
  xhttp.setRequestHeader("Content-type", "application/json");
  xhttp.send(JSON.stringify(data));
}

// help from https://stackoverflow.com/questions/23101966/bootstrap-alert-auto-close
function alertSuccess() {
  $("#success-alert").fadeTo(2000, 500).slideUp(500, function(){
    $("#success-alert").slideUp(500);
  });
}

function alertFailure() {
  $("#failure-alert").fadeTo(2000, 500).slideUp(500, function(){
    $("#failure-alert").slideUp(500);
  });
}

function alertSignatureSuccess(){
  $("#signature-success").fadeTo(2000, 500).slideUp(500, function(){
    $("#signature-success").slideUp(500);
  });
}

function alertSignatureFailure() {
  $("#signature-failure").fadeTo(2000, 500).slideUp(500, function(){
    $("#signature-failure").slideUp(500);
  });
}

function editToggledOn() {
  diableCreateNewUser();
  enableSubmitButton();
  enableCancelEditButton();
  disableEditButton();
  enableDeleteButton()
  enableFormInputs();
  document.getElementById("isNew").value = "false";
}

function cancelEdit() {
  enableCreateNewUser();
  disableSubmitButton();
  enableEditButton();
  disableCancelEditButton();
  disableDeleteButton();
  disableFormInputs();
  document.getElementById("isNew").value = " ";

}

function populateFormDisabled(json){
  document.getElementById("firstName").value = json.employee_first_name;
  document.getElementById("lastName").value = json.employee_last_name;
  document.getElementById("password").value = "";
  document.getElementById("email").value = json.employee_email;

  if (json.employee_type == "admin") {
    document.getElementById("isAdminYes").checked = true;
  } else {
    document.getElementById("isAdminNo").checked = true;
  }

  $( "#inputState" ).val(json.department_name);

  disableFormInputs();
}

function clearAllInputs() {
  document.getElementById("firstName").value = "";
  document.getElementById("lastName").value = "";
  document.getElementById("password").value = "";
  document.getElementById("email").value = "";
  document.getElementById("isAdminNo").checked = true;
}

function disableFormInputs() {
  document.getElementById("firstName").disabled = true;
  document.getElementById("lastName").disabled = true;
  document.getElementById("password").disabled = true;
  document.getElementById("email").disabled = true;
  document.getElementById("isAdminYes").disabled = true;
  document.getElementById("isAdminNo").disabled = true;
  disableDepartments();
}

function enableFormInputs() {
  document.getElementById("firstName").disabled = false;
  document.getElementById("lastName").disabled = false;
  document.getElementById("password").disabled = false;
  document.getElementById("isAdminYes").disabled = false;
  document.getElementById("isAdminNo").disabled = false;
  enableDepartments();
}

function enableCancelEditButton() {
  document.getElementById("cancelEditButton").disabled = false;
}

function disableCancelEditButton() {
  document.getElementById("cancelEditButton").disabled = true;
}

function disableDeleteButton() {
  document.getElementById("deleteButton").disabled = true;
}

function enableDeleteButton() {
  document.getElementById("deleteButton").disabled = false;
}

function enableEditButton() {
  document.getElementById("editButton").disabled = false;
}

function disableEditButton() {
  document.getElementById("editButton").disabled = true;
}

function disableSubmitButton() {
  document.getElementById("submitButton").disabled = true;
}

function enableSubmitButton() {
  document.getElementById("submitButton").disabled = false;
}

function enableDepartments() {
  document.getElementById("inputState").disabled = false;
}

function disableDepartments() {
  document.getElementById("inputState").disabled = true;
}

function disableCreateNewUser() {
  document.getElementById("createUser").disabled = true;
}

function enableCreateNewUser() {
  document.getElementById("createUser").disabled = false;
}
</script>
