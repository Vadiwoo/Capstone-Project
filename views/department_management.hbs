<div class="jumbotron">
  <div class="container">
    <h2>Department Management</h2>
  </div>
</div>

<div class="row">
  <div class="col-md-6 well">
    <h2>Create New Department</h2>
    <form action="/department_management" method="post">
      <div class="form-row">
        <label for="new_department_name" class="col-form-label">Department Name</label>
        <input type="text" class="form-control" id="new_department_name" placeholder="Enter Desired Name">
      </div>
      <div class="form-row">
        <button class="btn btn-primary btn-large btn-block" type="button" id="createDepartment" onclick="addDepartment()">Create Department</button>
      </div>
      <p class="text-danger" id="create_department_error"></p>
    </form>
    <div class="alert alert-success" id="success-alert" hidden=true>
      <strong>Department Created!</strong>
    </div>
    <div class="alert alert-danger" id="failure-alert" hidden=true>
      <strong>Error Creating Department</strong>
    </div>
  </div>

  <div class="col-md-6 well">
    <h2>Delete Department</h2>
    <div class="dropdown">
      <div class="form-group col-md-12">
        <label for="inputState">Department</label>
        <select id="inputState" class="form-control">
          <option selected>Select Department...</option>
          {{#each department_name}}
          <option value={{this}}>{{this}}</option>
          {{/each}}
        </select>
      </div>
    </div>
    <button class="btn btn-danger btn-large btn-block" type="button" id="deleteDepartment" onclick="deleteDepartment()">Delete Department</button>
  </br>
  <p><b>WARNING</b></p>
  <p>Users who belong to a deleted department will no longer belong to any department, and must be assigned to a department manually.</p>
  <div class="alert alert-success" id="delete-success-alert" hidden=true>
    <strong>Department Deleted!</strong>
  </div>
  <div class="alert alert-danger" id="delete-failure-alert" hidden=true>
    <strong>Error Deleting Department</strong>
  </div>
</div>
</div>

<script>

function addDepartment() {
  data = {'department_name' : document.getElementById("new_department_name").value};

  fetch('department_management', {
    body: JSON.stringify(data),
    method: 'POST',
    headers: {
      'content-type': 'application/json'
    },
  }).then(function(response) {
    if(!response.ok) {
      if(response.status == 409){
        document.getElementById("create_department_error").innerHTML = "Department already exists. Choose another name.";
      }
      alertCreateDepartmentFailure();
    } else {
      document.getElementById("create_department_error").value = "";
      alertCreateDepartmentSuccess();
      addToDropdown(data.department_name);
    }
  });
}

function deleteDepartment() {
  data = document.getElementById("inputState").value;

  fetch('department_management/'+ data, {
    method: 'DELETE'
  }).then(function(response) {
    if(!response.ok) {
      alertDeleteDepartmentFailure();
    } else {
      alertDeleteDepartmentSuccess();
      removeFromDropdown(data);
    }
  });
}

//code from https://stackoverflow.com/questions/375508/removing-an-item-from-a-select-box
function addToDropdown(newOption) {
  console.log(newOption);
  $("#inputState").append('<option value='+newOption+ '>' + newOption + '</option>');
}

function removeFromDropdown(option) {
  console.log(option);
  $("#inputState option[value='" + option + "']").remove();
}

function alertCreateDepartmentSuccess() {
  $("#success-alert").fadeTo(2000, 500).slideUp(500, function(){
    $("#success-alert").slideUp(500);
  });
}

function alertCreateDepartmentFailure() {
  $("#failure-alert").fadeTo(2000, 500).slideUp(500, function(){
    $("#failure-alert").slideUp(500);
  });
}

function alertDeleteDepartmentSuccess() {
  $("#delete-success-alert").fadeTo(2000, 500).slideUp(500, function(){
    $("#delete-success-alert").slideUp(500);
  });
}

function alertDeleteDepartmentFailure() {
  $("#delete-failure-alert").fadeTo(2000, 500).slideUp(500, function(){
    $("#delete-failure-alert").slideUp(500);
  });
}
</script>
